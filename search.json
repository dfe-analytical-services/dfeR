[{"path":[]},{"path":"https://dfe-analytical-services.github.io/dfeR/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://dfe-analytical-services.github.io/dfeR/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://dfe-analytical-services.github.io/dfeR/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://dfe-analytical-services.github.io/dfeR/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://dfe-analytical-services.github.io/dfeR/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement statistics.development@education.gov.uk. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://dfe-analytical-services.github.io/dfeR/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://dfe-analytical-services.github.io/dfeR/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://dfe-analytical-services.github.io/dfeR/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://dfe-analytical-services.github.io/dfeR/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://dfe-analytical-services.github.io/dfeR/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://dfe-analytical-services.github.io/dfeR/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired Mozilla’s code conduct enforcement ladder. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://dfe-analytical-services.github.io/dfeR/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to dfeR","title":"Contributing to dfeR","text":"Ideas dfeR first raised GitHub issue anyone free write code create pull request review. detailed discussion contributing R packages tidyverse, please see development contributing guide code review principles. Full knowledge isn’t needed, though awareness general principles may useful.","code":""},{"path":"https://dfe-analytical-services.github.io/dfeR/CONTRIBUTING.html","id":"support","dir":"","previous_headings":"","what":"Support","title":"Contributing to dfeR","text":"’re keen anyone DfE able feel comfortable contributing package. questions, like support making changes, let Statistics Development Team know.","code":""},{"path":"https://dfe-analytical-services.github.io/dfeR/CONTRIBUTING.html","id":"basics","dir":"","previous_headings":"","what":"Basics","title":"Contributing to dfeR","text":"contributing dfeR work new branch taken main. pull request must reviewed approved least one admin user can merged. ’ve found bug, please file issue illustrates bug minimal reprex example (also help write unit test, needed). See tidyverse guide create great issue advice.","code":""},{"path":"https://dfe-analytical-services.github.io/dfeR/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"Basics","what":"Fixing typos","title":"Contributing to dfeR","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://dfe-analytical-services.github.io/dfeR/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"Basics","what":"Bigger changes","title":"Contributing to dfeR","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees change. Packages worth installing aid development : possible, ’d recommend following Test Driven Development (TDD) approach. Though ’re new package development, already code specific function feel free start step 2, copy function package go back step 1 afterwards. Write tests using testthat behaviour want. Either edit existing test script, adding new function, create test script using: Feel free look /tests/test_that folder examples want see example tests practice. Write just enough code tests pass. , either edit existing function, add new R script using: Add documentation ’ve done. Follow roxygen2 pattern comments. can add standard skeleton using Code > Insert Roxygen Skeleton Ctrl+Shift+Alt+R R script. ’s example looks like basic add() function: Continue improve code keeping tests passing. Automatically style code using: Run full check package using following functions:","code":"install.packages(\"devtools\") install.packages(\"usethis\") install.packages(\"pkgdown\") install.packages(\"roxygen2\") install.packages(\"spelling\") install.packages(\"lintr\") install.packages(\"styler\") usethis::use_test(\"name_of_new_function\") usethis::use_r(\"name_of_new_function\") #' @description Add together two numbers #' #' @param x A number. #' @param y A number. #' @return A number. #' @examples #' add(1, 1) #' add(10, 1) add <- function(x, y) {   x + y } styler::style_pkg() devtools::check() # General package check, can also use Ctrl-Shift-E lintr::lint_package() # Check formatting of code spelling::spell_check() # Check for spelling mistakes"},{"path":"https://dfe-analytical-services.github.io/dfeR/CONTRIBUTING.html","id":"handy-workflows","dir":"","previous_headings":"","what":"Handy workflows","title":"Contributing to dfeR","text":"Keyboard shortcuts devtools package use RStudio: recommend using usethis package possible consistency simplicity.","code":"load_all() # (Ctrl-Shift-L): Load code with dfeR package test() # (Ctrl-Shift-T): Run tests document() # (Ctrl-Shift-D): Rebuild docs and NAMESPACE check() # (Ctrl-Shift-E): Check complete package"},{"path":"https://dfe-analytical-services.github.io/dfeR/CONTRIBUTING.html","id":"adding-package-dependencies","dir":"","previous_headings":"","what":"Adding package dependencies","title":"Contributing to dfeR","text":"Add packages package users need : Add packages package developers may need :","code":"usethis::use_package(pkgname) usethis::use_package(pkgname, type = \"suggests\")"},{"path":"https://dfe-analytical-services.github.io/dfeR/CONTRIBUTING.html","id":"updating-the-readme","dir":"","previous_headings":"","what":"Updating the README","title":"Contributing to dfeR","text":"two README files linked pre-commit-hook ensure kept sync. Make changes README.Rmd file run following line rebuild:","code":"devtools::build_readme()"},{"path":"https://dfe-analytical-services.github.io/dfeR/CONTRIBUTING.html","id":"pkgdown-site","dir":"","previous_headings":"","what":"pkgdown site","title":"Contributing to dfeR","text":"pkgdown site automatically generated. theme set _pkgdown.yml file. Custom CSS can set pkgdown/extra.css file. make edits file need re-initialise site using following line: site hosted GitHub pages. build preview pkgdown site locally running:","code":"pkgdown::init_site() devtools::build_site()"},{"path":"https://dfe-analytical-services.github.io/dfeR/CONTRIBUTING.html","id":"updating-the-package-version","dir":"","previous_headings":"","what":"Updating the package version","title":"Contributing to dfeR","text":"changes completed, reviewed ready use wild, can increment package version using: unsure kind version increment, look lifecycle’s guidance release types. ’ve incremented version number, ’ll offer perform commit behalf. happens add update NEWS.md, acts changelog package. Make sure updated correctly push GitHub. version updated pushed, create new GitHub release version.","code":"usethis::use_version()"},{"path":"https://dfe-analytical-services.github.io/dfeR/CONTRIBUTING.html","id":"lifecyles","dir":"","previous_headings":"Updating the package version","what":"Lifecyles","title":"Contributing to dfeR","text":"package lifecycle imported, follow guidance process around deprecating functions arguments.","code":""},{"path":"https://dfe-analytical-services.github.io/dfeR/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"","what":"Code style","title":"Contributing to dfeR","text":"New code follow tidyverse style guide. use lintr scan styling pull requests, automatically run add comments code failing standards ’d expect. happen, please proactively resolve unlikely approve pull requests styling issues. can use styler package apply styling using: check styling issues locally, use: styler fix linting issues, recommend using first, using lintr check places may need manually fix styling issues line length using snake_case.","code":"styler::style_pkg() lintr::lint_package()"},{"path":"https://dfe-analytical-services.github.io/dfeR/CONTRIBUTING.html","id":"testing","dir":"","previous_headings":"Code style","what":"Testing","title":"Contributing to dfeR","text":"use testthat unit tests, expect new functions level test coverage. want see examples existing tests inspiration, take look inside tests/testthat/ folder.","code":""},{"path":"https://dfe-analytical-services.github.io/dfeR/CONTRIBUTING.html","id":"test-coverage","dir":"","previous_headings":"Code style","what":"Test coverage","title":"Contributing to dfeR","text":"GitHub Actions workflows check link package codecov.io, runs automatic scans check % lines functions testing. dfeR codecov pages can preview variation branch commit see impact changes made. need create account login using GitHub see pages. current % coverage shown badge package README GitHub. worth noting 100% coverage mean tests perfect, means lines ran tests, ’s measure quantity rather quality. Interesting see though, ’d recommend using spot potential elements complicated functions may forgotten test.","code":""},{"path":"https://dfe-analytical-services.github.io/dfeR/CONTRIBUTING.html","id":"spelling","dir":"","previous_headings":"Code style","what":"Spelling","title":"Contributing to dfeR","text":"spelling package used check spelling. custom word list exceptions package exists inst/ folder. messages devtools::check() output ’s potential spelling errors. Please review fix genuine errors. can run check using: automatically pick genuine new words package add list, use:","code":"spelling::spell_check_package() spelling::update_wordlist()"},{"path":"https://dfe-analytical-services.github.io/dfeR/CONTRIBUTING.html","id":"adding-vignettes","dir":"","previous_headings":"","what":"Adding vignettes","title":"Contributing to dfeR","text":"Vignettes can found vignettes/ folder .Rmd files. start new one use:","code":"usethis::use_vignette(\"name_of_vignette\")"},{"path":"https://dfe-analytical-services.github.io/dfeR/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to dfeR","text":"Please note dfeR project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://dfe-analytical-services.github.io/dfeR/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://dfe-analytical-services.github.io/dfeR/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://dfe-analytical-services.github.io/dfeR/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://dfe-analytical-services.github.io/dfeR/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://dfe-analytical-services.github.io/dfeR/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://dfe-analytical-services.github.io/dfeR/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://dfe-analytical-services.github.io/dfeR/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://dfe-analytical-services.github.io/dfeR/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://dfe-analytical-services.github.io/dfeR/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://dfe-analytical-services.github.io/dfeR/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://dfe-analytical-services.github.io/dfeR/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://dfe-analytical-services.github.io/dfeR/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://dfe-analytical-services.github.io/dfeR/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://dfe-analytical-services.github.io/dfeR/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://dfe-analytical-services.github.io/dfeR/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://dfe-analytical-services.github.io/dfeR/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://dfe-analytical-services.github.io/dfeR/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://dfe-analytical-services.github.io/dfeR/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://dfe-analytical-services.github.io/dfeR/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://dfe-analytical-services.github.io/dfeR/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://dfe-analytical-services.github.io/dfeR/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://dfe-analytical-services.github.io/dfeR/PULL_REQUEST_TEMPLATE.html","id":null,"dir":"","previous_headings":"","what":"Brief overview of changes","title":"Brief overview of changes","text":"…","code":""},{"path":"https://dfe-analytical-services.github.io/dfeR/PULL_REQUEST_TEMPLATE.html","id":"why-are-these-changes-being-made","dir":"","previous_headings":"","what":"Why are these changes being made?","title":"Brief overview of changes","text":"…","code":""},{"path":"https://dfe-analytical-services.github.io/dfeR/PULL_REQUEST_TEMPLATE.html","id":"detailed-description-of-changes","dir":"","previous_headings":"","what":"Detailed description of changes","title":"Brief overview of changes","text":"…","code":""},{"path":"https://dfe-analytical-services.github.io/dfeR/PULL_REQUEST_TEMPLATE.html","id":"additional-information-for-reviewers","dir":"","previous_headings":"","what":"Additional information for reviewers","title":"Brief overview of changes","text":"…","code":""},{"path":"https://dfe-analytical-services.github.io/dfeR/PULL_REQUEST_TEMPLATE.html","id":"issue-ticket-numbers-and-link","dir":"","previous_headings":"","what":"Issue ticket number/s and link","title":"Brief overview of changes","text":"…","code":""},{"path":"https://dfe-analytical-services.github.io/dfeR/articles/connecting_to_sql.html","id":"connecting-to-a-database","dir":"Articles","previous_headings":"","what":"Connecting to a database","title":"Connecting to SQL","text":"Usually DfE use combination odbc DBI connect SQL databases. connect vary depending whether ’re running R code laptop, part deployed R Shiny app. running code laptop can automatically use Windows login (trusted connection) grant access database, package can automatically detect user details. advice finding database details, connecting SQL database R Shiny app deployed server, please contact Statistics Development Team able advise setup steps required.","code":"# Library calls ====  library(odbc) library(DBI)  # Database connection ====  con <- DBI::dbConnect(odbc::odbc(),   Driver = \"ODBC Driver 17 for SQL Server\",   Server = \"server_name\",   Database = \"database_name\",   UID = \"\",   PWD = \"\",   Trusted_Connection = \"Yes\" )"},{"path":"https://dfe-analytical-services.github.io/dfeR/articles/connecting_to_sql.html","id":"reading-a-sql-script-into-r","dir":"Articles","previous_headings":"","what":"Reading a SQL script into R","title":"Connecting to SQL","text":"number standard characters found SQL scripts can cause issues reading SQL script within R created get_clean_sql() function assist . Assume connected database assigned connection con variable, use following line read cleaned version SQL script R.","code":"sql_query <- dfeR::get_clean_sql(\"path_to_sql_file.sql\")"},{"path":"https://dfe-analytical-services.github.io/dfeR/articles/connecting_to_sql.html","id":"executing-the-sql-query","dir":"Articles","previous_headings":"","what":"Executing the SQL query","title":"Connecting to SQL","text":"Now SQL query saved variable R environment can pass function execute database. ’s number potential ways , though common way use dbGetQuery() DBI package, setting statement cleaned SQL query. ’s important note dbGetQuery() intended work ‘SELECT’ style queries . ’re something isn’t ‘SELECT’ query, writing back SQL, consider using dbExecute() dbSendQuery() functions DBI package instead. side note, SQL query short, write directly function :","code":"sql_query_result <- DBI::dbGetQuery(con, statement = sql_query) sql_query_result <- DBI::dbGetQuery(   con,   statement = \"SELECT * FROM [my_database_table]\" )"},{"path":"https://dfe-analytical-services.github.io/dfeR/articles/connecting_to_sql.html","id":"troubleshooting","dir":"Articles","previous_headings":"Executing the SQL query","what":"Troubleshooting","title":"Connecting to SQL","text":"first advice hit error, check SQL script runs SQL Server Management Studio (SSMS) valid SQL ‘SELECT’ query returns single output. Assuming runs fine SSMS, next thing try set additional settings cleaning SQL script. can additional_settings argument get_clean_sql() function. add additional settings start SQL query sometimes necessary odbc DBI connection correctly execute query. troubleshooting tips, please see Interacting SQL database section Analysts’ Guide, contact Statistics Development Team support.","code":"sql_query <- dfeR::get_clean_sql(   \"path_to_sql_file.sql\",   additional_settings = TRUE )"},{"path":"https://dfe-analytical-services.github.io/dfeR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Cam Race. Author, maintainer. Laura Selby. Author. Adam Robinson. Author. Jen Machin. Contributor. Rich Bielby. Contributor.","code":""},{"path":"https://dfe-analytical-services.github.io/dfeR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Race C, Selby L, Robinson (2024). dfeR: Common DfE R tasks. R package version 0.3.0, https://github.com/dfe-analytical-services/dfeR, https://dfe-analytical-services.github.io/dfeR/.","code":"@Manual{,   title = {dfeR: Common DfE R tasks},   author = {Cam Race and Laura Selby and Adam Robinson},   year = {2024},   note = {R package version 0.3.0,     https://github.com/dfe-analytical-services/dfeR},   url = {https://dfe-analytical-services.github.io/dfeR/}, }"},{"path":"https://dfe-analytical-services.github.io/dfeR/index.html","id":"dfer-","dir":"","previous_headings":"","what":"Common DfE R tasks","title":"Common DfE R tasks","text":"goal dfeR help standardise R programming across Department Education (DfE), facilitate sharing business specific functions, making code easier read write. Credit lauraselby logo featuring Frederick!","code":""},{"path":"https://dfe-analytical-services.github.io/dfeR/index.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Common DfE R tasks","text":"package open DfE anything think useful programmers analysts can contributed. Functionality dfeR expected focus around following: DfE specific formatting Working Microsoft SQL Databases Templates analytical projects Publication R Markdown Templates API wrappers use internally Documentation included package far pkgdown site. also developing dfeshiny package, expect functions specific public facing R Shiny dashboards live .","code":""},{"path":"https://dfe-analytical-services.github.io/dfeR/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Common DfE R tasks","text":"dfeR currently available CRAN. time can install development version GitHub. using renv project (recommended): Otherwise:","code":"renv::install(\"dfe-analytical-services/dfeR\") # install.packages(\"devtools\") devtools::install_github(\"dfe-analytical-services/dfeR\")"},{"path":"https://dfe-analytical-services.github.io/dfeR/index.html","id":"proxy","dir":"","previous_headings":"","what":"Proxy","title":"Common DfE R tasks","text":"need setting proxy settings order able work R Git within DfE estate now ended. previously run proxy script previous versions dfeR package, contact Statistics Development Team assist cleaning system settings.","code":""},{"path":"https://dfe-analytical-services.github.io/dfeR/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Common DfE R tasks","text":"Ideas dfeR first raised GitHub issue anyone free write code create pull request review. details contributing dfeR, see contributing guidelines.","code":""},{"path":"https://dfe-analytical-services.github.io/dfeR/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Common DfE R tasks","text":"Please note dfeR project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://dfe-analytical-services.github.io/dfeR/index.html","id":"examples","dir":"","previous_headings":"","what":"Examples","title":"Common DfE R tasks","text":"example formatting functions within package: details functions available package, examples use , please see dfeR package reference documentation.","code":"library(dfeR)  # Prettify large numbers pretty_num(111111111, gbp = TRUE) #> [1] \"£111.11 million\" pretty_num(-11^8, dp = -1) #> [1] \"-210 million\"  # Convert bytes to readable size pretty_filesize(77777777) #> [1] \"77.78 MB\"  # Calculate elapsed time and present prettily start <- Sys.time() end <- Sys.time() + 789890 pretty_time_taken(start, end) #> [1] \"219 hours 24 minutes 50 seconds\"  # Round 5's up instead of bankers round used by round() in base R round_five_up(2.5) #> [1] 3 round(2.5) # base R #> [1] 2  # Custom formatting for academic and financial years format_ay(202425) #> [1] \"2024/25\" format_fy(202425) #> [1] \"2024-25\" format_ay_reverse(\"2024/25\") #> [1] \"202425\" format_fy_reverse(\"2024-25\") #> [1] \"202425\""},{"path":"https://dfe-analytical-services.github.io/dfeR/reference/comma_sep.html","id":null,"dir":"Reference","previous_headings":"","what":"Comma separate — comma_sep","title":"Comma separate — comma_sep","text":"Adds separating commas big numbers.","code":""},{"path":"https://dfe-analytical-services.github.io/dfeR/reference/comma_sep.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Comma separate — comma_sep","text":"","code":"comma_sep(number)"},{"path":"https://dfe-analytical-services.github.io/dfeR/reference/comma_sep.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Comma separate — comma_sep","text":"number number comma separated","code":""},{"path":"https://dfe-analytical-services.github.io/dfeR/reference/comma_sep.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Comma separate — comma_sep","text":"string containing comma separated number","code":""},{"path":"https://dfe-analytical-services.github.io/dfeR/reference/comma_sep.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Comma separate — comma_sep","text":"","code":"comma_sep(100) #> [1] \"100\" comma_sep(1000) #> [1] \"1,000\" comma_sep(3567000) #> [1] \"3,567,000\""},{"path":"https://dfe-analytical-services.github.io/dfeR/reference/dfeR-package.html","id":null,"dir":"Reference","previous_headings":"","what":"dfeR: Common DfE R tasks — dfeR-package","title":"dfeR: Common DfE R tasks — dfeR-package","text":"package contains R functions allow DfE analysts re-use code common analytical tasks undertaken across Department.","code":""},{"path":[]},{"path":"https://dfe-analytical-services.github.io/dfeR/reference/dfeR-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"dfeR: Common DfE R tasks — dfeR-package","text":"Maintainer: Cam Race cameron.race@education.gov.uk Authors: Laura Selby laura.selby@education.gov.uk Adam Robinson contributors: Jen Machin jen.machin@education.gov.uk [contributor] Rich Bielby richard.bielby@education.gov.uk (ORCID) [contributor]","code":""},{"path":"https://dfe-analytical-services.github.io/dfeR/reference/format_ay.html","id":null,"dir":"Reference","previous_headings":"","what":"Format academic year — format_ay","title":"Format academic year — format_ay","text":"function formats academic year variables reporting purposes. convert academic year input 201516 format 2015/16 format.","code":""},{"path":"https://dfe-analytical-services.github.io/dfeR/reference/format_ay.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format academic year — format_ay","text":"","code":"format_ay(year)"},{"path":"https://dfe-analytical-services.github.io/dfeR/reference/format_ay.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format academic year — format_ay","text":"year Academic year","code":""},{"path":"https://dfe-analytical-services.github.io/dfeR/reference/format_ay.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format academic year — format_ay","text":"Character vector formatted academic year","code":""},{"path":"https://dfe-analytical-services.github.io/dfeR/reference/format_ay.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Format academic year — format_ay","text":"accepts numerical character arguments.","code":""},{"path":[]},{"path":"https://dfe-analytical-services.github.io/dfeR/reference/format_ay.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format academic year — format_ay","text":"","code":"format_ay(201617) #> [1] \"2016/17\" format_ay(\"201617\") #> [1] \"2016/17\""},{"path":"https://dfe-analytical-services.github.io/dfeR/reference/format_ay_reverse.html","id":null,"dir":"Reference","previous_headings":"","what":"Undo academic year formatting — format_ay_reverse","title":"Undo academic year formatting — format_ay_reverse","text":"function converts academic year variables back 201617 format.","code":""},{"path":"https://dfe-analytical-services.github.io/dfeR/reference/format_ay_reverse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Undo academic year formatting — format_ay_reverse","text":"","code":"format_ay_reverse(year)"},{"path":"https://dfe-analytical-services.github.io/dfeR/reference/format_ay_reverse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Undo academic year formatting — format_ay_reverse","text":"year Academic year","code":""},{"path":"https://dfe-analytical-services.github.io/dfeR/reference/format_ay_reverse.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Undo academic year formatting — format_ay_reverse","text":"Unformatted 6 digit year string","code":""},{"path":"https://dfe-analytical-services.github.io/dfeR/reference/format_ay_reverse.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Undo academic year formatting — format_ay_reverse","text":"accepts character arguments.","code":""},{"path":[]},{"path":"https://dfe-analytical-services.github.io/dfeR/reference/format_ay_reverse.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Undo academic year formatting — format_ay_reverse","text":"","code":"format_ay_reverse(\"2016/17\") #> [1] \"201617\""},{"path":"https://dfe-analytical-services.github.io/dfeR/reference/format_fy.html","id":null,"dir":"Reference","previous_headings":"","what":"Format financial year — format_fy","title":"Format financial year — format_fy","text":"function formats financial year variables reporting purposes. convert year input 201516 format 2015-16 format.","code":""},{"path":"https://dfe-analytical-services.github.io/dfeR/reference/format_fy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format financial year — format_fy","text":"","code":"format_fy(year)"},{"path":"https://dfe-analytical-services.github.io/dfeR/reference/format_fy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format financial year — format_fy","text":"year Financial year","code":""},{"path":"https://dfe-analytical-services.github.io/dfeR/reference/format_fy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format financial year — format_fy","text":"Character vector formatted financial year","code":""},{"path":"https://dfe-analytical-services.github.io/dfeR/reference/format_fy.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Format financial year — format_fy","text":"accepts numerical character arguments.","code":""},{"path":[]},{"path":"https://dfe-analytical-services.github.io/dfeR/reference/format_fy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format financial year — format_fy","text":"","code":"format_fy(201617) #> [1] \"2016-17\" format_fy(\"201617\") #> [1] \"2016-17\""},{"path":"https://dfe-analytical-services.github.io/dfeR/reference/format_fy_reverse.html","id":null,"dir":"Reference","previous_headings":"","what":"Undo financial year formatting — format_fy_reverse","title":"Undo financial year formatting — format_fy_reverse","text":"function converts financial year variables back 201617 format.","code":""},{"path":"https://dfe-analytical-services.github.io/dfeR/reference/format_fy_reverse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Undo financial year formatting — format_fy_reverse","text":"","code":"format_fy_reverse(year)"},{"path":"https://dfe-analytical-services.github.io/dfeR/reference/format_fy_reverse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Undo financial year formatting — format_fy_reverse","text":"year Financial year","code":""},{"path":"https://dfe-analytical-services.github.io/dfeR/reference/format_fy_reverse.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Undo financial year formatting — format_fy_reverse","text":"Unformatted 6 digit year string","code":""},{"path":"https://dfe-analytical-services.github.io/dfeR/reference/format_fy_reverse.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Undo financial year formatting — format_fy_reverse","text":"accepts character arguments.","code":""},{"path":[]},{"path":"https://dfe-analytical-services.github.io/dfeR/reference/format_fy_reverse.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Undo financial year formatting — format_fy_reverse","text":"","code":"format_fy_reverse(\"2016-17\") #> [1] \"201617\""},{"path":"https://dfe-analytical-services.github.io/dfeR/reference/get_clean_sql.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a cleaned SQL script into R — get_clean_sql","title":"Get a cleaned SQL script into R — get_clean_sql","text":"function cleans SQL script, ready using within R DfE.","code":""},{"path":"https://dfe-analytical-services.github.io/dfeR/reference/get_clean_sql.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a cleaned SQL script into R — get_clean_sql","text":"","code":"get_clean_sql(filepath, additional_settings = FALSE)"},{"path":"https://dfe-analytical-services.github.io/dfeR/reference/get_clean_sql.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a cleaned SQL script into R — get_clean_sql","text":"filepath path SQL script additional_settings TRUE FALSE boolean addition settings start SQL script","code":""},{"path":"https://dfe-analytical-services.github.io/dfeR/reference/get_clean_sql.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a cleaned SQL script into R — get_clean_sql","text":"Cleaned string containing SQL query","code":""},{"path":"https://dfe-analytical-services.github.io/dfeR/reference/get_clean_sql.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a cleaned SQL script into R — get_clean_sql","text":"","code":"# This assumes you have already set up a database connection # and that the filepath for the function exists # For more details see the vignette on connecting to SQL  # Pull a cleaned version of the SQL file into R if (file.exists(\"your_script.sql\")) {   sql_query <- get_clean_sql(\"your_script.sql\") }"},{"path":"https://dfe-analytical-services.github.io/dfeR/reference/pretty_filesize.html","id":null,"dir":"Reference","previous_headings":"","what":"Pretty numbers into readable file size — pretty_filesize","title":"Pretty numbers into readable file size — pretty_filesize","text":"Converts raw file size bytes readable format.","code":""},{"path":"https://dfe-analytical-services.github.io/dfeR/reference/pretty_filesize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pretty numbers into readable file size — pretty_filesize","text":"","code":"pretty_filesize(filesize)"},{"path":"https://dfe-analytical-services.github.io/dfeR/reference/pretty_filesize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pretty numbers into readable file size — pretty_filesize","text":"filesize file size bytes","code":""},{"path":"https://dfe-analytical-services.github.io/dfeR/reference/pretty_filesize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pretty numbers into readable file size — pretty_filesize","text":"string containing prettified file size","code":""},{"path":"https://dfe-analytical-services.github.io/dfeR/reference/pretty_filesize.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Pretty numbers into readable file size — pretty_filesize","text":"Designed used conjunction file.size() function base R. Presents kilobytes, megabytes gigabytes. Shows bytes 1 KB, kilobytes 1 MB, megabytes 1GB, show gigabytes anything larger. Rounds end result 2 decimal places. Using base 10 (decimal), 1024 bytes 1,024 KB.","code":""},{"path":[]},{"path":"https://dfe-analytical-services.github.io/dfeR/reference/pretty_filesize.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pretty numbers into readable file size — pretty_filesize","text":"","code":"pretty_filesize(2) #> [1] \"2 bytes\" pretty_filesize(549302) #> [1] \"549.3 KB\" pretty_filesize(9872948939) #> [1] \"9.87 GB\" pretty_filesize(1) #> [1] \"1 byte\" pretty_filesize(1000) #> [1] \"1 KB\" pretty_filesize(1000^2) #> [1] \"1 MB\" pretty_filesize(10^9) #> [1] \"1 GB\""},{"path":"https://dfe-analytical-services.github.io/dfeR/reference/pretty_num.html","id":null,"dir":"Reference","previous_headings":"","what":"Prettify big numbers into a readable format — pretty_num","title":"Prettify big numbers into a readable format — pretty_num","text":"Uses .numeric() force numeric value formats prettily easy presentation console messages, reports, dashboards. rounds 2 decimal places default, adds comma separators. Expect commonly used adding pound symbol, percentage symbol, +/- prefixed based value. applying multiple unpredictable values want preserve non-numeric symbol \"x\" \"c\" data available, use ignore_na = TRUE argument return values unaffected. want customise NA values returned , use alt_na argument. function silences warning around NAs introduced coercion.","code":""},{"path":"https://dfe-analytical-services.github.io/dfeR/reference/pretty_num.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prettify big numbers into a readable format — pretty_num","text":"","code":"pretty_num(   value,   prefix = \"\",   gbp = FALSE,   suffix = \"\",   dp = 2,   ignore_na = FALSE,   alt_na = FALSE )"},{"path":"https://dfe-analytical-services.github.io/dfeR/reference/pretty_num.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prettify big numbers into a readable format — pretty_num","text":"value value prettified prefix prefix value, \"+/-\" automatically assign + - based value gbp whether add pound symbol , defaults suffix suffix value, e.g. \"%\" dp number decimal places round , 2 default ignore_na whether skip function strings converted return original value alt_na alternative value return place NA, e.g. \"x\"","code":""},{"path":"https://dfe-analytical-services.github.io/dfeR/reference/pretty_num.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prettify big numbers into a readable format — pretty_num","text":"string featuring prettified value","code":""},{"path":[]},{"path":"https://dfe-analytical-services.github.io/dfeR/reference/pretty_num.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prettify big numbers into a readable format — pretty_num","text":"","code":"# On individual values pretty_num(5789, gbp = TRUE) #> [1] \"£5,789\" pretty_num(564, prefix = \"+/-\") #> [1] \"+564\" pretty_num(567812343223, gbp = TRUE, prefix = \"+/-\") #> [1] \"+£567.81 billion\" pretty_num(11^9, gbp = TRUE, dp = 3) #> [1] \"£2.358 billion\" pretty_num(-11^8, gbp = TRUE, dp = -1) #> [1] \"-£210 million\" pretty_num(\"56.089\", suffix = \"%\") #> [1] \"56.09%\" pretty_num(\"x\") #> [1] NA pretty_num(\"x\", ignore_na = TRUE) #> [1] \"x\" pretty_num(\"nope\", alt_na = \"x\") #> [1] \"x\"  # Applied over an example vector vector <- c(3998098008, -123421421, \"c\", \"x\") unlist(lapply(vector, pretty_num)) #> [1] \"4 billion\"       \"-123.42 million\" NA                NA                unlist(lapply(vector, pretty_num, prefix = \"+/-\", gbp = TRUE)) #> [1] \"+£4 billion\"      \"-£123.42 million\" NA                 NA                  # Return original values if NA unlist(lapply(vector, pretty_num, ignore_na = TRUE)) #> [1] \"4 billion\"       \"-123.42 million\" \"c\"               \"x\"                # Return alternative value in place of NA unlist(lapply(vector, pretty_num, alt_na = \"z\")) #> [1] \"4 billion\"       \"-123.42 million\" \"z\"               \"z\""},{"path":"https://dfe-analytical-services.github.io/dfeR/reference/pretty_time_taken.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate elapsed time between two points and present prettily — pretty_time_taken","title":"Calculate elapsed time between two points and present prettily — pretty_time_taken","text":"Converts start end value readable time format.","code":""},{"path":"https://dfe-analytical-services.github.io/dfeR/reference/pretty_time_taken.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate elapsed time between two points and present prettily — pretty_time_taken","text":"","code":"pretty_time_taken(start_time, end_time)"},{"path":"https://dfe-analytical-services.github.io/dfeR/reference/pretty_time_taken.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate elapsed time between two points and present prettily — pretty_time_taken","text":"start_time start time readable .POSIXct end_time end time readable .POSIXct","code":""},{"path":"https://dfe-analytical-services.github.io/dfeR/reference/pretty_time_taken.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate elapsed time between two points and present prettily — pretty_time_taken","text":"string containing prettified elapsed time","code":""},{"path":"https://dfe-analytical-services.github.io/dfeR/reference/pretty_time_taken.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate elapsed time between two points and present prettily — pretty_time_taken","text":"Designed used Sys.time() tracking start end times. Shows seconds 119 seconds, minutes 119 minutes, hours anything larger. Input start end times must convertible POSIXct format.","code":""},{"path":[]},{"path":"https://dfe-analytical-services.github.io/dfeR/reference/pretty_time_taken.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate elapsed time between two points and present prettily — pretty_time_taken","text":"","code":"pretty_time_taken(   \"2024-03-23 07:05:53 GMT\",   \"2024-03-23 12:09:56 GMT\" ) #> [1] \"5 hours 4 minutes 3 seconds\"  # Track the start and end time of a process start <- Sys.time() Sys.sleep(0.1) end <- Sys.time()  # Use this function to present it prettily pretty_time_taken(start, end) #> [1] \"0.1 seconds\""},{"path":"https://dfe-analytical-services.github.io/dfeR/reference/round_five_up.html","id":null,"dir":"Reference","previous_headings":"","what":"Round five up — round_five_up","title":"Round five up — round_five_up","text":"Round number specified number places, 5's rounded .","code":""},{"path":"https://dfe-analytical-services.github.io/dfeR/reference/round_five_up.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Round five up — round_five_up","text":"","code":"round_five_up(number, dp = 0)"},{"path":"https://dfe-analytical-services.github.io/dfeR/reference/round_five_up.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Round five up — round_five_up","text":"number number rounded dp number decimal places round , default 0","code":""},{"path":"https://dfe-analytical-services.github.io/dfeR/reference/round_five_up.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Round five up — round_five_up","text":"Rounded number","code":""},{"path":"https://dfe-analytical-services.github.io/dfeR/reference/round_five_up.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Round five up — round_five_up","text":"Rounds 0 decimal places default. can use negative value decimal places. example: -1 round nearest 10 -2 round nearest 100 . alternative round base R, uses bankers round. information see round() documentation.","code":""},{"path":"https://dfe-analytical-services.github.io/dfeR/reference/round_five_up.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Round five up — round_five_up","text":"","code":"# No dp set round_five_up(2485.85) #> [1] 2486  # With dp set round_five_up(2485.85, 2) #> [1] 2485.85 round_five_up(2485.85, 1) #> [1] 2485.9 round_five_up(2485.85, 0) #> [1] 2486 round_five_up(2485.85, -1) #> [1] 2490 round_five_up(2485.85, -2) #> [1] 2500"},{"path":"https://dfe-analytical-services.github.io/dfeR/news/index.html","id":"dfer-030","dir":"Changelog","previous_headings":"","what":"dfeR 0.3.0","title":"dfeR 0.3.0","text":"Add pretty_* functions presenting pretty numbers: pretty_num() pretty_filesize() pretty_time_taken() Add helper function comma separating numbers: comma_sep()","code":""},{"path":"https://dfe-analytical-services.github.io/dfeR/news/index.html","id":"dfer-020","dir":"Changelog","previous_headings":"","what":"dfeR 0.2.0","title":"dfeR 0.2.0","text":"Add function formatting financial years: format_fy() Add reversing functions academic financial years: format_ay_reverse() format_fy_reverse() Add function grabbing cleaning SQL script, vignette connecting SQL. get_clean_sql()","code":""},{"path":"https://dfe-analytical-services.github.io/dfeR/news/index.html","id":"dfer-011","dir":"Changelog","previous_headings":"","what":"dfeR 0.1.1","title":"dfeR 0.1.1","text":"Add default value decimal place argument round_five_up() function.","code":""},{"path":"https://dfe-analytical-services.github.io/dfeR/news/index.html","id":"dfer-010","dir":"Changelog","previous_headings":"","what":"dfeR 0.1.0","title":"dfeR 0.1.0","text":"Relaunch package two functions: format_ay() round_five_up()","code":""}]
